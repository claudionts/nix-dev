name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: Check Nix Flake
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          
    - name: Setup Cachix
      uses: cachix/cachix-action@v15
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        
    - name: Check flake
      run: nix flake check --impure
      
    - name: Build home-manager configuration
      run: |
        nix build .#homeConfigurations.claudio.activationPackage --impure
        
    - name: Verify flake metadata
      run: |
        nix flake metadata
        nix flake show
        
  format:
    name: Check Nix Code Formatting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          
    - name: Check formatting with alejandra
      run: |
        nix run nixpkgs#alejandra -- --check .
        
  test-build-matrix:
    name: Test Build on Multiple Systems
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nixpkgs:
          - "nixos-unstable"
          - "nixos-24.05"
          
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:${{ matrix.nixpkgs }}
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          
    - name: Setup Cachix
      uses: cachix/cachix-action@v15
      with:
        name: nix-community
        
    - name: Test build with ${{ matrix.nixpkgs }}
      run: |
        nix build .#homeConfigurations.claudio.activationPackage --impure --show-trace
        
  validate-configs:
    name: Validate Individual Configs
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          
    - name: Validate individual config files
      run: |
        echo "Validating Nix syntax..."
        for file in $(find . -name "*.nix" -type f); do
          echo "Checking $file"
          nix-instantiate --parse "$file" > /dev/null
        done
        
    - name: Test flake inputs update
      run: |
        nix flake update --commit-lock-file
        nix build .#homeConfigurations.claudio.activationPackage --impure
